{"ast":null,"code":"var _jsxFileName = \"/Users/ko/Desktop/kswproject/react-express-mysql-practice/src/pages/RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport axios from 'axios';\n//import { useHistory } from \"react-router-dom\";\n//import Layout from \"./Layout/Layout\";\n//import Header from \"./Layout/Header\";\n//import { useDispatch } from 'react-redux';\n//import { registerUser } from '../../../_actions/user_action';\n\n//1. 중복 체크시에 멘트 dp되는거\n//2. 비밀번호 유효성 검사\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = styled.header`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 100px;\n    background-color: #E5E0FF;\n`;\n_c = Header;\nconst Label = styled.label`\n    font-size: 14px;\n    color: #373A3C;\n`;\n_c2 = Label;\nconst Input = styled.input`\n    color: #999999;\n    padding: 8px 100px 3px 0px;\n    margin: 10px 0px;\n    background: white;\n    border-radius: 4px;\n    border-width: 1.4px;\n    border-color: #CCCCCC;\n    padding-left: 14px;\n    text-align: left;\n`;\n_c3 = Input;\nconst CheckDuplicateButton = styled.button`\n    color: #8F8F8F;\n    background: #F5F5F5;\n    font-weight: bold;\n    border: none;\n    border-radius: 4px;\n    margin-left: 30px ;\n    padding-left: 10px;\n    \n    &:hover {\n        cursor: pointer;\n    }\n    &:focus{\n        box-shadow: 0 0 0 1px gray;\n    }\n`;\n_c4 = CheckDuplicateButton;\nconst SubmitButton = styled.button`\n    color: white;\n    font-weight: bold;\n    padding: 5px 1px;\n    background: #A2A1FF;\n    font-size:1.2rem;\n    font-weight: bold;\n    border:none;\n    border-radius: 7px;\n\n    &:hover {\n        cursor: pointer;\n    }\n    &:focus{\n        box-shadow: 0 0 0 1px gray;\n    }\n`;\n_c5 = SubmitButton;\nconst CancelButton = styled.button`\n    color: #AEAEAE;\n    font-weight: bold;\n    padding: 5px 1px;\n    background: #E5E5E5;\n    font-size:1.2rem;\n    font-weight: bold;\n    border: none;\n    border-radius: 7px;\n\n    &:hover {\n        cursor: pointer;\n    }\n    &:focus{\n        box-shadow: 0 0 0 1px gray;\n    }\n`;\n_c6 = CancelButton;\nconst express = require(\"express\");\nconst mysql = require(\"mysql\");\nconst path = require(\"path\");\nconst dbconfig = require(\"./config/db.js\");\nconst connection = mysql.createConnection(dbconfig); // 순전히 /us를 위한 정의부\nconst port = 3000;\nconst crypto = require(\"crypto\");\nconst pool = mysql.createPool({\n  connectionLimit: 10,\n  host: dbconfig.host,\n  user: dbconfig.user,\n  password: dbconfig.password,\n  database: dbconfig.database\n});\nconst app = express();\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(express.json());\n\n// 1. 루트\napp.get(\"/\", (req, res) => {\n  res.send(\"Root22\");\n});\n\n// 2. select test\napp.get(\"/us\", (req, res) => {\n  connection.query(\"SELECT * from User\", (error, rows) => {\n    if (error) throw error;\n    console.log(\"User info is: \", rows);\n    res.send(rows);\n  });\n});\n\n// 3. 회원가입\napp.post(\"/members/new\", (req, res) => {\n  console.log(\"/members/new 호출됨 \" + req);\n  const paramId = req.body.user_id;\n  const paramPassword = req.body.user_password;\n  const paramPasswordCheck = req.body.user_password_check;\n  var salt = Math.round(new Date().valueOf() * Math.random()) + \"\";\n  var hashPassword = crypto.createHash(\"sha512\").update(paramPassword + salt).digest(\"hex\");\n  pool.getConnection((err, conn) => {\n    // 1. sql 연결 문제\n    if (err) {\n      conn.release();\n      console.log(\"Mysql get connection error\");\n      res.writeHead(\"200\", {\n        \"content-Type\": \"text/html; charset=utf8\"\n      });\n      res.write(\"<h2>DB 서버 연결 실패</h2>\");\n      res.end();\n      return;\n    }\n    // sql 연결 성공 시\n    console.log(\"데이터베이스 conn\");\n    const exec = conn.query(\"insert into USERTEST (USER_ID, USER_PASSWORD, salt) values (?, ?, ?);\", [paramId, hashPassword, salt], (err, result) => {\n      conn.release();\n      console.log(\"실행된 SQL: \" + exec.sql);\n\n      // 2. id 중복 문제\n      if (err) {\n        console.log(\"SQL 실행시 오류 발생; id 중복 문제\");\n        console.dir(err);\n        res.writeHead(\"200\", {\n          \"content-Type\": \"text/html; charset=utf8\"\n        });\n        res.write(\"<h2>SQL 실행 실패; id 중복 문제</h2>\");\n        res.end();\n        return;\n      }\n      if (result) {\n        //3. pw 불일치 문제\n        if (paramPassword != paramPasswordCheck) {\n          //conn.release();\n          console.log(\"Password inconsistency\");\n          res.writeHead(\"200\", {\n            \"content-Type\": \"text/html; charset=utf8\"\n          });\n          res.write(\"<h2>비밀번호 불일치</h2>\");\n          res.end();\n          return;\n        }\n        console.dir(result);\n        console.log(\"insert 성공\");\n        res.writeHead(\"200\", {\n          \"content-Type\": \"text/html; charset=utf8\"\n        });\n        res.write(\"<h2>사용자 추가 성공</h2>\");\n        res.end();\n      } else {\n        console.log(\"insert 실패\");\n        res.writeHead(\"200\", {\n          \"content-Type\": \"text/html; charset=utf8\"\n        });\n        res.write(\"<h2>사용자 추가 실패</h2>\");\n        res.end();\n      }\n    });\n  });\n});\nfunction RegisterPage(props) {\n  _s();\n  //const dispatch = useDispatch();\n\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [usableId, setUsableId] = useState(false);\n  //const {replace} = useHistory();\n\n  const onIdHandler = event => {\n    setId(event.currentTarget.value);\n  };\n  const onPasswordHandler = event => {\n    setPassword(event.currentTarget.value);\n  };\n  const onConfirmPasswordHandler = event => {\n    setConfirmPassword(event.currentTarget.value);\n  };\n  const onClickCancelBtn = () => {\n    alert('cancel');\n  };\n  const dupIdCheck = () => {\n    alert('dup');\n\n    // duplicationCheckAPI(id) //dup check API\n    // .then((response) => {\n    //     console.log(response)\n    //     if(response === false){\n    //         alert('사용 가능한 아이디입니다.'); \n    //< Instead of alert, needs to consider colored texts >\n    //         setUsableId(response);\n    //     }else{\n    //         alert('중복된 아이디입니다.');\n    //         setUsableId(response);\n    //         setId('');\n    //     }\n    //     console.log('중복체크');\n    // })\n  };\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      return alert('비밀번호와 비밀번호 확인이 같지 않습니다.');\n    }\n    if (id === '') {\n      return alert('아이디를 입력해주세요.');\n    } else if (setUsableId(false)) {\n      return '아이디 중복 확인을 해주세요.';\n    }\n    alert(\"버튼 눌림!\");\n\n    //======== 추가한 부분 ========\n\n    // Request API.\n    const data = axios.post('/register', {\n      //서버로 보냄\n      id: id,\n      //오른쪽은 앞에서 선언한 변수\n      password: password\n    }).then(response => {\n      //response는 서버로부터 받아오는 거. response가 끝나지 않으면 화살표 다음으로 넘어가지 않음 (then땜에)\n      // Handle success.\n      console.log('Well done!');\n      console.log('User profile', response.data.user);\n      // console.log('User token', response.data.jwt);\n      // localStorage.setItem('token', response.data.jwt); //로그인 하면 로그인 남아있도록\n      // replace(\"/\");\n    }).catch(error => {\n      // Handle error.\n      console.log('An error occurred:', error.response);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          height: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              align: \"center\",\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"\\uC544\\uC774\\uB514\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'row'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                size: \"50\",\n                value: id,\n                onChange: onIdHandler,\n                placeholder: \"6~15\\uC790\\uAE4C\\uC9C0 \\uC601\\uBB38\\uC790(\\uC18C\\uBB38\\uC790), \\uC22B\\uC790 \\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(CheckDuplicateButton, {\n                onClick: dupIdCheck,\n                children: \" \\u2714 \\uC911\\uBCF5 \\uD655\\uC778\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              value: password,\n              onChange: onPasswordHandler,\n              placeholder: \"1\\uAC1C \\uC774\\uC0C1\\uC758 \\uD2B9\\uC218\\uBB38\\uC790\\uB97C \\uD3EC\\uD568\\uD558\\uACE0 8\\uC790\\uB9AC \\uC774\\uC0C1, 40\\uC790 \\uC774\\uD558\\uC5EC\\uC57C \\uD569\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 153\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 159\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              value: confirmPassword,\n              onChange: onConfirmPasswordHandler,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\\uC744 \\uC704\\uD574 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uD55C \\uBC88 \\uB354 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 158\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 164\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 170\n            }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n              type: \"submit\",\n              onClick: onSubmitHandler,\n              formAction: \"/login\",\n              children: \"\\uC644\\uB8CC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(CancelButton, {\n              onClick: onClickCancelBtn,\n              formAction: \"/login\",\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"BC18EiB5HEzvFdvkyWLxXZFpRpM=\");\n_c7 = RegisterPage;\nexport default RegisterPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"CheckDuplicateButton\");\n$RefreshReg$(_c5, \"SubmitButton\");\n$RefreshReg$(_c6, \"CancelButton\");\n$RefreshReg$(_c7, \"RegisterPage\");","map":{"version":3,"names":["React","useState","styled","axios","Header","header","Label","label","Input","input","CheckDuplicateButton","button","SubmitButton","CancelButton","express","require","mysql","path","dbconfig","connection","createConnection","port","crypto","pool","createPool","connectionLimit","host","user","password","database","app","use","urlencoded","extended","json","get","req","res","send","query","error","rows","console","log","post","paramId","body","user_id","paramPassword","user_password","paramPasswordCheck","user_password_check","salt","Math","round","Date","valueOf","random","hashPassword","createHash","update","digest","getConnection","err","conn","release","writeHead","write","end","exec","result","sql","dir","RegisterPage","props","id","setId","setPassword","confirmPassword","setConfirmPassword","usableId","setUsableId","onIdHandler","event","currentTarget","value","onPasswordHandler","onConfirmPasswordHandler","onClickCancelBtn","alert","dupIdCheck","onSubmitHandler","preventDefault","data","then","response","catch","display","justifyContent","alignItems","width","height","flexDirection"],"sources":["/Users/ko/Desktop/kswproject/react-express-mysql-practice/src/pages/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport axios from 'axios';\n//import { useHistory } from \"react-router-dom\";\n//import Layout from \"./Layout/Layout\";\n//import Header from \"./Layout/Header\";\n//import { useDispatch } from 'react-redux';\n//import { registerUser } from '../../../_actions/user_action';\n\n//1. 중복 체크시에 멘트 dp되는거\n//2. 비밀번호 유효성 검사\n\nconst Header = styled.header`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 100px;\n    background-color: #E5E0FF;\n`;\n\nconst Label = styled.label`\n    font-size: 14px;\n    color: #373A3C;\n`;\n\nconst Input = styled.input`\n    color: #999999;\n    padding: 8px 100px 3px 0px;\n    margin: 10px 0px;\n    background: white;\n    border-radius: 4px;\n    border-width: 1.4px;\n    border-color: #CCCCCC;\n    padding-left: 14px;\n    text-align: left;\n`;\n\nconst CheckDuplicateButton = styled.button`\n    color: #8F8F8F;\n    background: #F5F5F5;\n    font-weight: bold;\n    border: none;\n    border-radius: 4px;\n    margin-left: 30px ;\n    padding-left: 10px;\n    \n    &:hover {\n        cursor: pointer;\n    }\n    &:focus{\n        box-shadow: 0 0 0 1px gray;\n    }\n`;\n\nconst SubmitButton = styled.button`\n    color: white;\n    font-weight: bold;\n    padding: 5px 1px;\n    background: #A2A1FF;\n    font-size:1.2rem;\n    font-weight: bold;\n    border:none;\n    border-radius: 7px;\n\n    &:hover {\n        cursor: pointer;\n    }\n    &:focus{\n        box-shadow: 0 0 0 1px gray;\n    }\n`;\n\nconst CancelButton = styled.button`\n    color: #AEAEAE;\n    font-weight: bold;\n    padding: 5px 1px;\n    background: #E5E5E5;\n    font-size:1.2rem;\n    font-weight: bold;\n    border: none;\n    border-radius: 7px;\n\n    &:hover {\n        cursor: pointer;\n    }\n    &:focus{\n        box-shadow: 0 0 0 1px gray;\n    }\n`;\n\n\n\n\n\nconst express = require(\"express\");\nconst mysql = require(\"mysql\");\nconst path = require(\"path\");\nconst dbconfig = require(\"./config/db.js\");\nconst connection = mysql.createConnection(dbconfig); // 순전히 /us를 위한 정의부\nconst port = 3000;\nconst crypto = require(\"crypto\");\n\nconst pool = mysql.createPool({\n  connectionLimit: 10,\n  host: dbconfig.host,\n  user: dbconfig.user,\n  password: dbconfig.password,\n  database: dbconfig.database,\n});\n\nconst app = express();\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\n\n// 1. 루트\napp.get(\"/\", (req, res) => {\n  res.send(\"Root22\");\n});\n\n// 2. select test\napp.get(\"/us\", (req, res) => {\n    connection.query(\"SELECT * from User\", (error, rows) => {\n      if (error) throw error;\n      console.log(\"User info is: \", rows);\n      res.send(rows);\n    });\n  });\n  \n  // 3. 회원가입\n  app.post(\"/members/new\", (req, res) => {\n    console.log(\"/members/new 호출됨 \" + req);\n  \n    const paramId = req.body.user_id;\n    const paramPassword = req.body.user_password;\n    const paramPasswordCheck = req.body.user_password_check;\n  \n    var salt = Math.round(new Date().valueOf() * Math.random()) + \"\";\n    var hashPassword = crypto\n      .createHash(\"sha512\")\n      .update(paramPassword + salt)\n      .digest(\"hex\");\n  \n    pool.getConnection((err, conn) => {\n      // 1. sql 연결 문제\n      if (err) {\n        conn.release();\n        console.log(\"Mysql get connection error\");\n        res.writeHead(\"200\", { \"content-Type\": \"text/html; charset=utf8\" });\n        res.write(\"<h2>DB 서버 연결 실패</h2>\");\n        res.end();\n        return;\n      }\n      // sql 연결 성공 시\n      console.log(\"데이터베이스 conn\");\n      const exec = conn.query(\n        \"insert into USERTEST (USER_ID, USER_PASSWORD, salt) values (?, ?, ?);\",\n        [paramId, hashPassword, salt],\n        (err, result) => {\n          conn.release();\n          console.log(\"실행된 SQL: \" + exec.sql);\n  \n          // 2. id 중복 문제\n          if (err) {\n            console.log(\"SQL 실행시 오류 발생; id 중복 문제\");\n            console.dir(err);\n            res.writeHead(\"200\", { \"content-Type\": \"text/html; charset=utf8\" });\n            res.write(\"<h2>SQL 실행 실패; id 중복 문제</h2>\");\n            res.end();\n            return;\n          }\n  \n          if (result) {\n            //3. pw 불일치 문제\n            if (paramPassword != paramPasswordCheck) {\n              //conn.release();\n              console.log(\"Password inconsistency\");\n              res.writeHead(\"200\", { \"content-Type\": \"text/html; charset=utf8\" });\n              res.write(\"<h2>비밀번호 불일치</h2>\");\n              res.end();\n              return;\n            }\n  \n            console.dir(result);\n            console.log(\"insert 성공\");\n  \n            res.writeHead(\"200\", { \"content-Type\": \"text/html; charset=utf8\" });\n            res.write(\"<h2>사용자 추가 성공</h2>\");\n            res.end();\n          } else {\n            console.log(\"insert 실패\");\n  \n            res.writeHead(\"200\", { \"content-Type\": \"text/html; charset=utf8\" });\n            res.write(\"<h2>사용자 추가 실패</h2>\");\n            res.end();\n          }\n        }\n      );\n    });\n  });\n\n  \n\n\n\n\n\nfunction RegisterPage(props) {\n    //const dispatch = useDispatch();\n\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [usableId, setUsableId] = useState(false);\n    //const {replace} = useHistory();\n\n\n    const onIdHandler = (event) => {\n        setId(event.currentTarget.value);\n    }\n    const onPasswordHandler = (event) => {\n        setPassword(event.currentTarget.value);\n    }\n    const onConfirmPasswordHandler = (event) => {\n        setConfirmPassword(event.currentTarget.value);\n    }\n\n    const onClickCancelBtn = () =>{\n        alert('cancel');\n    }\n\n    const dupIdCheck = () =>{\n        alert('dup');\n\n        // duplicationCheckAPI(id) //dup check API\n        // .then((response) => {\n        //     console.log(response)\n        //     if(response === false){\n        //         alert('사용 가능한 아이디입니다.'); \n                    //< Instead of alert, needs to consider colored texts >\n        //         setUsableId(response);\n        //     }else{\n        //         alert('중복된 아이디입니다.');\n        //         setUsableId(response);\n        //         setId('');\n        //     }\n        //     console.log('중복체크');\n        // })\n\n    }\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault();\n\n        if(password !== confirmPassword){\n            return alert('비밀번호와 비밀번호 확인이 같지 않습니다.');\n        }\n        if(id === ''){\n            return alert('아이디를 입력해주세요.');\n        }\n        else if(setUsableId(false)){\n            return ('아이디 중복 확인을 해주세요.');\n        }\n\n        alert(\"버튼 눌림!\")\n\n        //======== 추가한 부분 ========\n\n        // Request API.\n        const data = axios\n        .post('/register', { //서버로 보냄\n            id: id, //오른쪽은 앞에서 선언한 변수\n            password: password,\n        })\n        .then(response => { //response는 서버로부터 받아오는 거. response가 끝나지 않으면 화살표 다음으로 넘어가지 않음 (then땜에)\n            // Handle success.\n            console.log('Well done!');\n            console.log('User profile', response.data.user);\n            // console.log('User token', response.data.jwt);\n            // localStorage.setItem('token', response.data.jwt); //로그인 하면 로그인 남아있도록\n            // replace(\"/\");\n        })\n        .catch(error => {\n            // Handle error.\n            console.log('An error occurred:', error.response);\n        });\n\n\n\n    }\n\n\n    return (\n        <div>\n            <Header></Header>\n            <div>\n                <div style={{ \n                    display: 'flex', justifyContent: 'center', alignItems: 'center', \n                    width: '100%', height: '100vh'\n                }}>\n                    <div>\n                        <div>\n                            <h2 align=\"center\">회원가입</h2><br />\n                        </div>\n                        <form style={{ display: 'flex', flexDirection: 'column'}} >\n                            <Label>아이디</Label> \n                            <div style={{ display:'flex', flexDirection: 'row'}}>\n                            <Input type='text' size ='50' value={id} onChange={onIdHandler} placeholder='6~15자까지 영문자(소문자), 숫자 사용 가능합니다.'/>\n                            <CheckDuplicateButton onClick={dupIdCheck}> &#10004; 중복 확인</CheckDuplicateButton>\n                            </div>\n                            <br/><br/>\n\n                            <Label>비밀번호</Label>\n                            <Input type='password' value={password} onChange={onPasswordHandler} placeholder='1개 이상의 특수문자를 포함하고 8자리 이상, 40자 이하여야 합니다.'/><br /><br />\n                            <Label>비밀번호 확인</Label>\n                            <Input type='password' value={confirmPassword} onChange={onConfirmPasswordHandler} placeholder='비밀번호 확인을 위해 비밀번호를 한 번 더 입력하세요.'/><br /><br /><br />\n                            \n                            <SubmitButton type='submit' onClick={onSubmitHandler} formAction='/login'>{/* form Action 안에 login url 넣어주면 됨 */}\n                                완료\n                            </SubmitButton><br></br>\n                            <CancelButton onClick={onClickCancelBtn} formAction='/login'> \n                                취소\n                            </CancelButton>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RegisterPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}